{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Login.css\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      inputEmpty: false,\n      msg: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        inputEmpty: true,\n        username: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var username = _this.state.username;\n      if (!username) _this.setState({\n        inputEmpty: true\n      });\n\n      _this.props.login(username);\n\n      _this.setState({\n        username: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          guest = _this$props.guest,\n          user = _this$props.user;\n      var _this$state = this.state,\n          inputEmpty = _this$state.inputEmpty,\n          msg = _this$state.msg; //this.props.user first time it renders is an empty object which is truthy,so we pass username to make sure is not empty and if so, return children of router\n\n      if (user.username) return this.props.children;\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        onSubmit: this.handleSubmit,\n        className: \"inputButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"textInputLogin\",\n        placeholder: \"jessjelly\",\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Login\"), inputEmpty ? React.createElement(\"h3\", {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Can't login without username!\") : inputEmpty && guest ? React.createElement(\"h3\", {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"You entered Wrong Username!\") : \"\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  user: PropTypes.object.isRequired,\n  guest: PropTypes.bool\n};\nexport default Login;","map":{"version":3,"sources":["/Users/apple/Documents/newProjects/FE2/NC-NEWS-MAH/src/components/Login.jsx"],"names":["React","Component","PropTypes","Login","state","username","inputEmpty","msg","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","login","guest","user","children","color","propTypes","object","isRequired","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;IACMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,UAAU,EAAC,KAFL;AAGNC,MAAAA,GAAG,EAAC;AAHE,K;;UAyBRC,Y,GAAe,UAAAC,CAAC,EAAI;AAClB,YAAKC,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAC,IADC;AAEZD,QAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AAFP,OAAd;AAID,K;;UACDC,Y,GAAe,UAAAJ,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;AADkB,UAEXT,QAFW,GAEC,MAAKD,KAFN,CAEXC,QAFW;AAGlB,UAAI,CAACA,QAAL,EAAe,MAAKK,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAC;AAAZ,OAAd;;AACf,YAAKS,KAAL,CAAWC,KAAX,CAAiBX,QAAjB;;AACA,YAAKK,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,K;;;;;;;6BAlCQ;AAAA,wBACc,KAAKU,KADnB;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACMC,IADN,eACMA,IADN;AAAA,wBAEiB,KAAKd,KAFtB;AAAA,UAEAE,UAFA,eAEAA,UAFA;AAAA,UAEWC,GAFX,eAEWA,GAFX,EAGP;;AACA,UAAIW,IAAI,CAACb,QAAT,EAAmB,OAAO,KAAKU,KAAL,CAAWI,QAAlB;AACnB,aAAO;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAE,KAAKN,YAA/B;AAA6C,QAAA,SAAS,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,WAAW,EAAC,WAA9C;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,IAAI,EAAC,UAA3E;AAAsF,QAAA,EAAE,EAAC,UAAzF;AAAoG,QAAA,QAAQ,EAAE,KAAKL,YAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,OACsI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtI,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAIGF,UAAU,GAAG;AAAI,QAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAH,GAEDd,UAAU,IAAIW,KAAd,GAAsB;AAAI,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAtB,GAEA,EARZ,CADF,CADG,CAAP;AAcD;;;;EAzBiBnB,S;;AA2CpBE,KAAK,CAACkB,SAAN,GAAkB;AAChBH,EAAAA,IAAI,EAAChB,SAAS,CAACoB,MAAV,CAAiBC,UADN;AAEhBN,EAAAA,KAAK,EAACf,SAAS,CAACsB;AAFA,CAAlB;AAKA,eAAerB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Login.css\";\nclass Login extends Component {\n  state = {\n    username: \"\",\n    inputEmpty:false,\n    msg:\"\"\n  };\n  render() {\n    const {guest,user} = this.props;\n    const {inputEmpty,msg} =this.state;\n    //this.props.user first time it renders is an empty object which is truthy,so we pass username to make sure is not empty and if so, return children of router\n    if (user.username) return this.props.children;\n    return <div className=\"main\">\n        <div id=\"login\">\n          <form action=\"\" onSubmit={this.handleSubmit} className=\"inputButton\">\n            <input className=\"textInputLogin\" placeholder=\"jessjelly\" type=\"text\" name=\"username\" id=\"username\" onChange={this.handleChange} /> <br />\n            <button type=\"submit\">Login</button>\n\n            {inputEmpty ? <h3 style={{ color: \"white\" }}>\n             Can't login without username!\n              </h3> : inputEmpty && guest ? <h3 style={{ color: \"white\" }}>\n             You entered Wrong Username!\n              </h3> : \"\" }\n          </form>\n        </div>\n      </div>;\n  }\n  handleChange = e => {\n    this.setState({\n      inputEmpty:true,\n      username: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const {username} = this.state;\n    if (!username) this.setState({inputEmpty:true});\n    this.props.login(username);\n    this.setState({\n      username: \"\"\n    });\n  };\n}\n\nLogin.propTypes = {\n  user:PropTypes.object.isRequired,\n  guest:PropTypes.bool\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}